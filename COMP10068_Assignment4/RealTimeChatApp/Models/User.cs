// User.cs
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
/// <summary>
///  <Authorship>I, Ali Abdulsameea, 000857347 certify that this material is my original work.
/// No other person's work has been used without due acknowledgement.</Authorship>
///
/// 
/// <author>Ali Abubaker - 000857347</author>
/// </summary>
/// 
namespace RealTimeChatApp.Models;

/// <summary>
/// Represents a user in the real-time chat application.
/// </summary>
public class User
{
    /// <summary>
    /// Gets or sets the unique identifier for the user.
    /// </summary>
    /// <remarks>
    /// This value is automatically generated by the database upon creation.
    /// </remarks>
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int Id { get; set; }

    /// <summary>
    /// Gets or sets the username of the user.
    /// </summary>
    /// <remarks>
    /// The username is required and must be 12 characters or less.
    /// </remarks>
    [Required]
    [StringLength(12)]
    public string Username { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the date and time when the user connected to the chat.
    /// </summary>
    public DateTime ConnectedTime { get; set; }

    /// <summary>
    /// Gets or sets the date and time when the user disconnected from the chat.
    /// </summary>
    /// <remarks>
    /// This value is null if the user is currently connected.
    /// </remarks>
    public DateTime? DisconnectedTime { get; set; }

    /// <summary>
    /// Gets or sets the collection of chat messages sent by this user.
    /// </summary>
    /// <remarks>
    /// This is a navigation property that represents the one-to-many relationship between User and ChatMessage.
    /// </remarks>
    public virtual ICollection<ChatMessage> Messages { get; set; } = new List<ChatMessage>();
}