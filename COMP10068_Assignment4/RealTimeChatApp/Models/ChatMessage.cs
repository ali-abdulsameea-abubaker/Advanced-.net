using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
/// <summary>
///  <Authorship>I, Ali Abdulsameea, 000857347 certify that this material is my original work.
/// No other person's work has been used without due acknowledgement.</Authorship>
///
/// 
/// <author>Ali Abubaker - 000857347</author>
/// </summary>
/// 
namespace RealTimeChatApp.Models;

/// <summary>
/// Represents a chat message entity in the real-time chat application.
/// </summary>
/// <remarks>
/// This class maps to a database table that stores all chat messages,
/// including their content, timestamp, and associated user information.
/// </remarks>
public class ChatMessage
{
    /// <summary>
    /// Gets or sets the unique identifier for the chat message.
    /// </summary>
    /// <value>
    /// The database-generated unique ID of the message.
    /// </value>
    /// <remarks>
    /// This property is marked as a primary key and is automatically
    /// generated by the database upon insertion.
    /// </remarks>
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int Id { get; set; }

    /// <summary>
    /// Gets or sets the content/text of the chat message.
    /// </summary>
    /// <value>
    /// The message content as a string, with a maximum length of 500 characters.
    /// </value>
    /// <remarks>
    /// This property is required and cannot be null or empty.
    /// The content supports plain text and may include formatted content
    /// like links or emoji codes.
    /// </remarks>
    [Required(ErrorMessage = "Message content is required")]
    [StringLength(200, ErrorMessage = "Message cannot exceed 200 characters")]
    public string Content { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the date and time when the message was sent.
    /// </summary>
    /// <value>
    /// The UTC timestamp of when the message was created.
    /// </value>
    /// <remarks>
    /// This property is required and should be set automatically
    /// when the message is created on the server.
    /// </remarks>
    [Required(ErrorMessage = "Sent time is required")]
    public DateTime SentTime { get; set; }

    /// <summary>
    /// Gets or sets the ID of the user who sent this message.
    /// </summary>
    /// <value>
    /// The foreign key to the associated User entity.
    /// </value>
    /// <remarks>
    /// This property establishes a required relationship with the User table.
    /// </remarks>
    [Required(ErrorMessage = "User ID is required")]
    [ForeignKey("User")]
    public int UserId { get; set; }

    /// <summary>
    /// Gets or sets the user who sent this message.
    /// </summary>
    /// <value>
    /// The navigation property to the associated User entity.
    /// </value>
    /// <remarks>
    /// This navigation property enables Entity Framework's lazy loading
    /// of the related User entity.
    /// </remarks>
    public virtual User User { get; set; } = null!;


}